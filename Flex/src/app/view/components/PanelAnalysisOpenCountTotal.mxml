<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" label="总开合次数">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:SolidColorStroke id="lineStoke" weight="1"/>
		<s:RadioButtonGroup id="rbgStation"/>
		
		<s:SolidColorStroke id="tickStroke" color="0xC2C2C2" weight="2"/>
		<s:SolidColorStroke id="gridStroke" color="gray" alpha="0.3" weight="1"/>
		<s:SolidColorStroke id="yesStroke" color="red" weight="2"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import app.model.vo.RopewayForceVO;
			import app.model.vo.RopewaySwitchFreqTotalVO;
			
			import com.adobe.utils.DateUtil;
			
			import custom.itemRenderer.ItemRendererGroup;
			
			import mx.charts.HitData;
			import mx.events.FlexEvent;
			
			import org.puremvc.as3.interfaces.IMediator;
			import org.puremvc.as3.interfaces.INotification;
			import org.puremvc.as3.patterns.mediator.Mediator;
			
			import spark.events.IndexChangeEvent;
			import spark.events.RendererExistenceEvent;
			
			public static var ONE_HOUR:Number = 60 * 60 * 1000;
			
			public static var QUERY:String = "Query";
			
			[Bindable]public var colStations:ArrayCollection;
						
			[Bindable]public var colRopeway:ArrayCollection;
			
			protected function datagroupStations_rendererAddHandler(event:RendererExistenceEvent):void
			{
				var renderer:ItemRendererGroup = event.renderer as ItemRendererGroup;
				renderer.rb.group = rbgStation;
			}
						
			public function get dateS():Date
			{		
				if(checkDatetime.selected)
					return dateDayS.selectedDate;
				else 
					return null;
			}
			
			public function get dateE():Date
			{		
				if(checkDatetime.selected)
					return new Date(dateDayE.selectedDate.fullYear,dateDayE.selectedDate.month,dateDayE.selectedDate.date + 1);
				else 
					return null;
			}
			
			protected function btnReset_buttonDownHandler(event:FlexEvent):void
			{
				btnBar.selectedIndex = 1;
				rbgStation.selectedValue = "所有索道站";
				dateDayS.selectedDate = new Date;
				dateDayE.selectedDate = new Date;
				colRopeway.source = [];
			}			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:HGroup id="panelHead" height="125" paddingBottom="2" paddingLeft="2" paddingRight="2"
			  paddingTop="2">		
		<s:SkinnableContainer skinClass="custom.skin.SkinHeadPanel" height="100%" width="120">
			<s:VGroup height="100%" horizontalAlign="center" width="100%">					
				<s:Button label="统计" icon="@Embed('assets/image/btn_find.png')" 
						  buttonDown="dispatchEvent(new Event(QUERY))" width="100%"/>
				<s:Button label="重置" icon="@Embed('assets/image/btn_back.png')" width="100%" buttonDown="btnReset_buttonDownHandler(event)"/>
				<s:ButtonBar width="100%" id="btnBar" selectedIndex="0">
					<s:ArrayCollection>
						<fx:String>图形</fx:String>
						<fx:String>表格</fx:String>
					</s:ArrayCollection>
				</s:ButtonBar>
			</s:VGroup>
			<s:Line width="100%" stroke="{lineStoke}"/>
			<s:HGroup horizontalAlign="center" verticalAlign="middle" height="25" width="100%">
				<s:Label text="操作" fontWeight="bold"/>
			</s:HGroup>
		</s:SkinnableContainer>	
		
		<s:SkinnableContainer skinClass="custom.skin.SkinHeadPanel" height="100%">
			<s:DataGroup width="220" height="100%" dataProvider="{colStations}"
						 itemRenderer="custom.itemRenderer.ItemRendererGroup" 
						 rendererAdd="datagroupStations_rendererAddHandler(event)">
				<s:layout>
					<s:TileLayout/>
				</s:layout>
			</s:DataGroup>
			<s:Line width="100%" stroke="{lineStoke}"/>
			<s:HGroup horizontalAlign="center" verticalAlign="middle" height="25" width="100%">
				<s:Label text="索道站" fontWeight="bold"/>
			</s:HGroup>
		</s:SkinnableContainer>	
		
		<s:SkinnableContainer skinClass="custom.skin.SkinHeadPanel" height="100%" width="180">	
			<s:VGroup height="100%" width="100%" enabled="{checkDatetime.selected}">				
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label text="开始日期："/>
					<mx:DateField id="dateDayS" width="100%" formatString="YYYY-MM-DD" selectedDate="{new Date}"
								  dayNames="['日','一','二','三','四','五','六']"
								  monthNames="['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月']"/>
				</s:HGroup>
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label text="结束日期："/>
					<mx:DateField id="dateDayE" width="100%" formatString="YYYY-MM-DD" selectedDate="{new Date}"
								  dayNames="['日','一','二','三','四','五','六']"
								  monthNames="['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月']"/>
				</s:HGroup>
			</s:VGroup>
			
			<s:Line width="100%" stroke="{lineStoke}"/>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" height="25" width="100%">
				<s:CheckBox id="checkDatetime" selected="false"/>
				<s:Label text="统计时间" fontWeight="bold"/>
			</s:HGroup>
		</s:SkinnableContainer>	
	</s:HGroup>
	
	<mx:ViewStack selectedIndex="{btnBar.selectedIndex}" width="100%" height="100%" paddingBottom="20" paddingLeft="20"
				  paddingRight="20" paddingTop="20">
		<s:NavigatorContent>
			<mx:ColumnChart width="100%" height="100%" showDataTips="true" dataProvider="{colRopeway}">
				<mx:verticalAxis>
					<mx:LinearAxis id="verticalAxis"/>
				</mx:verticalAxis>
				
				<mx:horizontalAxis>
					<mx:CategoryAxis categoryField="ropewayCarId"/>
				</mx:horizontalAxis>
								
				<mx:series>
					<mx:ColumnSeries yField="switchFreqTotal"/>
				</mx:series>
			</mx:ColumnChart>
		</s:NavigatorContent>
		<s:NavigatorContent>
			<s:DataGrid width="100%" height="100%" dataProvider="{colRopeway}">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn headerText="吊箱编号" dataField="ropewayCarId" width="100"/>
						<s:GridColumn headerText="报索器编号" dataField="ropewayId" width="100"/>
						<s:GridColumn headerText="开合总数" dataField="switchFreqTotal" width="100"/>	
						<s:GridColumn headerText="所属索道站" dataField="fromRopeStation"/>
						<s:GridColumn headerText="所属索道" dataField="fromRopeWay"/>
					</s:ArrayList>				
				</s:columns>
			</s:DataGrid>
		</s:NavigatorContent>
	</mx:ViewStack>
</s:NavigatorContent>
