<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" label="报警信息" xmlns:components="custom.components.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:SolidColorStroke id="lStroke" color="#63c3d6" weight="2"/>
		
		<s:SolidColorStroke id="lineStoke" weight="1"/>
		<s:RadioButtonGroup id="rbgStation" change="rbgStation_changeHandler(event)" selectedValue="@{selStation}"/>
		
		<s:SolidColorStroke id="tickStroke" color="0xC2C2C2" weight="2"/>
		<s:SolidColorStroke id="gridStroke" color="gray" alpha="0.3" weight="1"/>
		<s:SolidColorStroke id="yesStroke" color="red" weight="2"/>
		
		<s:DateTimeFormatter id="dateF" dateTimePattern="yyyy-MM-dd HH:mm:ss"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import app.model.vo.RopewayAlarmVO;
			import app.model.vo.ForceVO;
			
			import com.adobe.utils.DateUtil;
			
			import custom.itemRenderer.ItemRendererGroup;
			
			import mx.charts.HitData;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import org.puremvc.as3.interfaces.IMediator;
			import org.puremvc.as3.interfaces.INotification;
			import org.puremvc.as3.patterns.mediator.Mediator;
			
			import spark.events.IndexChangeEvent;
			import spark.events.RendererExistenceEvent;
			
			public static var ONE_HOUR:Number = 60 * 60 * 1000;
			
			public static var QUERY:String = "Query";
			
			public static var EXPORT:String = "Export";
			
			public static var STATION_CHANGE:String = "StaionChange";
			
			[Bindable]public var selStation:*;
			
			[Bindable]public var colStations:ArrayCollection;
			
			[Bindable]public var colCarriage:ArrayCollection = new ArrayCollection;
			
			[Bindable]public var colRopewayHis:ArrayCollection;
			
			protected function datagroupStations_rendererAddHandler(event:RendererExistenceEvent):void
			{
				var renderer:ItemRendererGroup = event.renderer as ItemRendererGroup;
				renderer.rb.group = rbgStation;
			}
						
			protected function rbgStation_changeHandler(event:Event):void
			{
				dispatchEvent(new Event(STATION_CHANGE));
			}
						
			public function get dateS():Date
			{						
				return new Date(dateDayS.selectedDate.fullYear
					,dateDayS.selectedDate.month
					,dateDayS.selectedDate.date
					,Number(textHourS.text)
					,Number(textMinS.text));
			}
			
			public function get dateE():Date
			{		
				if((textHourE.text == "")
					&& (textMinE.text == ""))
				{					
					return new Date(dateDayE.selectedDate.fullYear
						,dateDayE.selectedDate.month
						,dateDayE.selectedDate.date + 1);
				}
				else
				{
					return new Date(dateDayE.selectedDate.fullYear
						,dateDayE.selectedDate.month
						,dateDayE.selectedDate.date
						,Number(textHourE.text)
						,Number(textMinE.text) + 1);
				}
			}
			
			protected function listCarId_changeHandler(event:IndexChangeEvent):void
			{
				listRopewayId.selectedIndex = listCarId.selectedIndex;
			}
			
			protected function listRopewayId_changeHandler(event:IndexChangeEvent):void
			{
				listCarId.selectedIndex = listRopewayId.selectedIndex;
			}
			
			protected function btnReset_buttonDownHandler(event:FlexEvent):void
			{
				rbgStation.selectedValue = colStations[0];
				dateDayS.selectedDate = new Date;
				dateDayE.selectedDate = new Date;
				listCarId.selectedIndex = 0;
				listRopewayId.selectedIndex = 0;
				colRopewayHis.source = [];
			}
			
			private function dealDateLabelFunction(alarm:RopewayAlarmVO,column:GridColumn):String
			{
				if(alarm.dealDatetime.time > 0)
					return dateF.format(alarm.dealDatetime);
				else
					return "未处置";
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:HGroup id="panelHead" height="120">		
		<components:SkinnableTitleContainer skinClass="custom.skin.SkinPanelAnalysis" height="100%" title="索道站">
			<s:DataGroup width="220" height="100%" dataProvider="{colStations}"
						 itemRenderer="custom.itemRenderer.ItemRendererGroup" 
						 rendererAdd="datagroupStations_rendererAddHandler(event)">
				<s:layout>
					<s:TileLayout/>
				</s:layout>
			</s:DataGroup>
		</components:SkinnableTitleContainer>	
		
		<components:SkinnableTitleContainer skinClass="custom.skin.SkinPanelAnalysis" height="100%" width="280" title="查询时间">
			<s:HGroup width="100%" verticalAlign="middle">
				<s:Label text="开始时间："/>
				<mx:DateField id="dateDayS" width="100%" formatString="YYYY-MM-DD" selectedDate="{new Date}"/>
				<s:TextInput id="textHourS" width="30" restrict="0-9"/>
				<s:Label text=":"/>
				<s:TextInput id="textMinS" width="30" restrict="0-9"/>
			</s:HGroup>
			<s:HGroup width="100%" verticalAlign="middle">
				<s:Label text="结束时间："/>
				<mx:DateField id="dateDayE" width="100%" formatString="YYYY-MM-DD" selectedDate="{new Date}"/>
				<s:TextInput id="textHourE" width="30" restrict="0-9"/>
				<s:Label text=":"/>
				<s:TextInput id="textMinE" width="30" restrict="0-9"/>
			</s:HGroup>
		</components:SkinnableTitleContainer>	
		
		<components:SkinnableTitleContainer skinClass="custom.skin.SkinPanelAnalysis" height="100%" width="220" title="查询条件">
			<s:HGroup verticalAlign="middle" width="100%">
				<s:Label text="　吊箱编号："/>
				<s:DropDownList id="listCarId" requireSelection="true" dataProvider="{colCarriage}" labelField="ropewayCarId"
								width="100%" change="listCarId_changeHandler(event)"/>
			</s:HGroup>	
			<s:HGroup verticalAlign="middle" width="100%">
				<s:Label text="抱索器编号："/>
				<s:DropDownList id="listRopewayId" requireSelection="true" dataProvider="{colCarriage}" labelField="ropewayId"
								width="100%" change="listRopewayId_changeHandler(event)"/>
			</s:HGroup>	
		</components:SkinnableTitleContainer>	
		
		<components:SkinnableTitleContainer skinClass="custom.skin.SkinPanelAnalysis" height="100%" width="120" title="操作">
			<s:Button label="查询" icon="@Embed('assets/image/btn_find.jpg')" 
					  buttonDown="dispatchEvent(new Event(QUERY))" width="100%"/>
			<s:Button label="重置" icon="@Embed('assets/image/btn_back.jpg')" 
					  width="100%" buttonDown="btnReset_buttonDownHandler(event)"/>
			<s:Button label="导出" icon="@Embed('assets/image/btn_export.png')" 
					  width="100%" buttonDown="dispatchEvent(new Event(EXPORT))"/>		
		</components:SkinnableTitleContainer>	
	</s:HGroup>
		
	<s:HGroup width="100%" verticalAlign="middle">
		<s:Line stroke="{lStroke}" width="100%"/>
		<s:Label text="抱索力报警信息（{colRopewayHis.length}）" fontWeight="bold"/>
		<s:Line stroke="{lStroke}" width="100%"/>
	</s:HGroup>
	
	<s:DataGrid width="100%" height="100%" dataProvider="{colRopewayHis}"
				borderColor="#63c3d6" skinClass="custom.skin.SkinGrid" 
				alternatingRowColors="[#FFFFFF,#CFEDF7]">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="吊箱编号" dataField="carId" width="100"/>
				<s:GridColumn headerText="报索器编号" dataField="ropeCode" width="100"/>
				<s:GridColumn headerText="报警时间" dataField="alarmDate" width="200" formatter="{dateF}"/>			
				<s:GridColumn headerText="报警描述" dataField="alarmDesc" width="200"/>	
				<s:GridColumn headerText="所属索道站" dataField="fromRopeStation" width="100"/>
				<s:GridColumn headerText="处置时间" dataField="dealDatetime" width="200" labelFunction="dealDateLabelFunction"/>
				<s:GridColumn headerText="处置人" dataField="dealUser" width="100"/>
				<s:GridColumn headerText="处置描述" dataField="dealDesc"/>
			</s:ArrayList>				
		</s:columns>
	</s:DataGrid>
</s:NavigatorContent>
