<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:components="custom.components.*"
		 label="平均抱索力">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:SolidColorStroke id="lineStoke" weight="1"/>
		<s:RadioButtonGroup id="rbgStation" change="rbgStation_changeHandler(event)"/>
		
		<s:SolidColorStroke id="tickStroke" color="0xC2C2C2" weight="2"/>
		<s:SolidColorStroke id="gridStroke" color="gray" alpha="0.3" weight="1"/>
		<s:SolidColorStroke id="yesStroke" color="red" weight="2"/>
		
		<s:SolidColorStroke id="lStroke" color="0xE48701" weight="1"/>		
		<s:SolidColorStroke id="aStroke" color="red" weight="1"/>		
		<mx:WipeRight id="wipeShow" duration="1000"/>
		
		<s:DateTimeFormatter id="dateF" dateTimePattern="yyyy-MM-dd"/>
		
		<mx:DateTimeAxis displayLocalTime="true" labelFunction="labelTimeAxis"
						 alignLabelsToUnits="true"
						 id="hAxis"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import app.model.vo.RopewayForceAverageVO;
			
			import com.adobe.utils.DateUtil;
			
			import custom.itemRenderer.ItemRendererGroup;
			import custom.itemRenderer.ItemRendererLineChartAve;
			import custom.itemRenderer.ItemRendererLineChartForce;
			
			import mx.charts.HitData;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.series.items.LineSeriesItem;
			import mx.events.FlexEvent;
			
			import org.puremvc.as3.interfaces.IMediator;
			import org.puremvc.as3.interfaces.INotification;
			import org.puremvc.as3.patterns.mediator.Mediator;
			
			import spark.events.IndexChangeEvent;
			import spark.events.RendererExistenceEvent;
			
			public static var ONE_HOUR:Number = 60 * 60 * 1000;
			
			public static var QUERY:String = "Query";
			
			public static var STATION_CHANGE:String = "StaionChange";
			
			public static var SELECT_ONE:String = "SelectOne";
			
			[Bindable]public var colStations:ArrayCollection;
			
			[Bindable]public var colRopeway:ArrayCollection = new ArrayCollection;
			
			[Bindable]public var colRopewayHis:ArrayCollection;
			
			public var selectOne:Boolean = false;
			
			protected function datagroupStations_rendererAddHandler(event:RendererExistenceEvent):void
			{
				var renderer:ItemRendererGroup = event.renderer as ItemRendererGroup;
				renderer.rb.group = rbgStation;
			}
						
			protected function rbgStation_changeHandler(event:Event):void
			{
				dispatchEvent(new Event(STATION_CHANGE));
			}
						
			public function get dateS():Date
			{		
				if(comboTime.selectedIndex == 0)
				{
					return dateDayS.selectedDate;
				}
				else if(comboTime.selectedIndex == 1)
				{
					return new Date(dateMonthS.selectedDate.fullYear,dateMonthS.selectedDate.month,1);
				}
				
				return new Date;
			}
			
			public function get dateE():Date
			{		
				if(comboTime.selectedIndex == 0)
				{
					return new Date(dateDayE.selectedDate.fullYear,dateDayE.selectedDate.month,dateDayE.selectedDate.date + 1);
				}
				else if(comboTime.selectedIndex == 1)
				{
					return new Date(dateMonthE.selectedDate.fullYear,dateMonthE.selectedDate.month + 1,1);
				}
				
				return new Date;
			}
			
			private function labelForce(item:Object, column:GridColumn):String
			{
				return item.ropewayForce + " " + item.ropewayUnit;
			}			
			
			private function dataTipFunction(hitData:HitData):String
			{
				var element:LineSeries =  hitData.element as LineSeries;
				var item:LineSeriesItem = hitData.chartItem as LineSeriesItem;
				var r:String = "时间：" + dateF.format(item.xValue);
				
				if(element.yField == "maxValue")
					return r + "\n" + "最大抱索力：" + item.yValue;
				else if(element.yField == "averageValue")
					return r + "\n" + "平均抱索力：" + item.yValue;
				else if(element.yField == "minValue")
					return r + "\n" + "最小抱索力：" + item.yValue;
				else 
					return "";
			}

			protected function btnBar_changingHandler(event:IndexChangeEvent):void
			{
				if((!selectOne) && (event.newIndex == 0))
				{
					event.preventDefault();
					
					dispatchEvent(new Event(SELECT_ONE));
				}
			}
			
			protected function listCarId_changeHandler(event:IndexChangeEvent):void
			{
				if(listCarId.selectedIndex == 0)
					btnBar.selectedIndex = 1;
				
				listRopewayId.selectedIndex = listCarId.selectedIndex;
			}
			
			protected function listRopewayId_changeHandler(event:IndexChangeEvent):void
			{
				if(listCarId.selectedIndex == 0)
					btnBar.selectedIndex = 1;
				
				listCarId.selectedIndex = listRopewayId.selectedIndex;
			}
			
			protected function btnReset_buttonDownHandler(event:FlexEvent):void
			{
				btnBar.selectedIndex = 1;
				rbgStation.selectedValue = colStations[0];
				comboTime.selectedIndex = 0;
				dateF.dateTimePattern = "yyyy-MM-dd";
				hAxis.dataUnits = "days";
				dateDayS.selectedDate = DateUtil.addDateTime("d",-1,new Date);
				dateDayE.selectedDate = DateUtil.addDateTime("d",-1,new Date);
				dateMonthS.selectedDate = DateUtil.addDateTime("d",-1,new Date);
				dateMonthE.selectedDate = DateUtil.addDateTime("d",-1,new Date);
				listCarId.selectedIndex = 0;
				listRopewayId.selectedIndex = 0;
				colRopewayHis.source = [];
			}
			
			protected function comboTime_changeHandler(event:IndexChangeEvent):void
			{
				if(comboTime.selectedIndex == 0)
				{
					dateF.dateTimePattern = "yyyy-MM-dd";
					hAxis.dataUnits = "days";
				}
				else
				{
					dateF.dateTimePattern = "yyyy-MM";
					hAxis.dataUnits = "months";
				}
			}
			
			private function labelTimeAxis(labelValue:Object, previousValue:Object, axis:IAxis):String 
			{
				return dateF.format(labelValue);
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:HGroup id="panelHead"  height="120">		
		<components:SkinnableTitleContainer skinClass="custom.skin.SkinPanelAnalysis" height="100%" title="索道站">
			<s:DataGroup width="220" height="100%" dataProvider="{colStations}"
						 itemRenderer="custom.itemRenderer.ItemRendererGroup" 
						 rendererAdd="datagroupStations_rendererAddHandler(event)">
				<s:layout>
					<s:TileLayout/>
				</s:layout>
			</s:DataGroup>
		</components:SkinnableTitleContainer>	
		
		<components:SkinnableTitleContainer skinClass="custom.skin.SkinPanelAnalysis" height="100%" width="200" title="统计时间">
			<s:HGroup width="100%" verticalAlign="middle">
				<s:Label text="类　　型："/>
				<s:DropDownList id="comboTime" requireSelection="true" 
								change="comboTime_changeHandler(event)"
								width="100%" height="21">
					<s:ArrayCollection>
						<fx:String>按天</fx:String>
						<fx:String>按月</fx:String>
					</s:ArrayCollection>
				</s:DropDownList>				
			</s:HGroup>			
			
			<mx:ViewStack width="100%" height="100%" creationPolicy="all"
						  selectedIndex="{comboTime.selectedIndex}">				
				<s:NavigatorContent width="100%">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Label text="开始日期："/>
						<mx:DateField id="dateDayS" width="100%" formatString="YYYY-MM-DD" selectedDate="{DateUtil.addDateTime('d',-1,new Date)}" height="21"
									  dayNames="['日','一','二','三','四','五','六']"
									  monthNames="['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月']"/>
					</s:HGroup>
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Label text="结束日期："/>
						<mx:DateField id="dateDayE" width="100%" formatString="YYYY-MM-DD" selectedDate="{DateUtil.addDateTime('d',-1,new Date)}" height="21"
									  dayNames="['日','一','二','三','四','五','六']"
									  monthNames="['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月']"/>
					</s:HGroup>
				</s:NavigatorContent>
				<s:NavigatorContent width="100%">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Label text="开始月份："/>
						<mx:DateField id="dateMonthS" width="100%" formatString="YYYY-MM" selectedDate="{DateUtil.addDateTime('d',-1,new Date)}" height="21"
									  dayNames="['日','一','二','三','四','五','六']"
									  monthNames="['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月']"/>
					</s:HGroup>
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Label text="结束月份："/>
						<mx:DateField id="dateMonthE" width="100%" formatString="YYYY-MM" selectedDate="{DateUtil.addDateTime('d',-1,new Date)}" height="21"
									  dayNames="['日','一','二','三','四','五','六']"
									  monthNames="['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月']"/>
					</s:HGroup>
				</s:NavigatorContent>
			</mx:ViewStack>
		</components:SkinnableTitleContainer>	
		
		<components:SkinnableTitleContainer skinClass="custom.skin.SkinPanelAnalysis" height="100%" width="220" title="统计条件">
			<s:HGroup verticalAlign="middle" width="100%">
				<s:Label text="　吊箱编号："/>
				<s:DropDownList id="listCarId" requireSelection="true" dataProvider="{colRopeway}" labelField="ropewayCarId"
								width="100%" change="listCarId_changeHandler(event)"/>
			</s:HGroup>	
			<s:HGroup verticalAlign="middle" width="100%">
				<s:Label text="抱索器编号："/>
				<s:DropDownList id="listRopewayId" requireSelection="true" dataProvider="{colRopeway}" labelField="ropewayId"
								width="100%" change="listRopewayId_changeHandler(event)"/>
			</s:HGroup>	
		</components:SkinnableTitleContainer>		
		
		<components:SkinnableTitleContainer skinClass="custom.skin.SkinPanelAnalysis" height="100%" width="120" title="操作">
			<s:Button label="统计" icon="@Embed('assets/image/btn_find.jpg')" 
					  buttonDown="dispatchEvent(new Event(QUERY))" width="100%"/>
			<s:Button label="重置" icon="@Embed('assets/image/btn_back.jpg')" width="100%" buttonDown="btnReset_buttonDownHandler(event)"/>
			<s:ButtonBar width="100%" id="btnBar" changing="btnBar_changingHandler(event)" selectedIndex="1">
				<s:ArrayCollection>
					<fx:String>图形</fx:String>
					<fx:String>表格</fx:String>
				</s:ArrayCollection>
			</s:ButtonBar>
		</components:SkinnableTitleContainer>	
	</s:HGroup>
	
	<mx:ViewStack selectedIndex="{btnBar.selectedIndex}" width="100%" height="100%">
		<s:NavigatorContent>
			<s:SkinnableContainer left="0" right="0" top="0" bottom="0">			
				<s:Rect id="border" left="0" right="0" top="0" bottom="0">
					<s:stroke>
						<s:SolidColorStroke weight="1" color="#63c3d6"/>
					</s:stroke>
				</s:Rect>	
				
				<mx:LineChart width="100%" height="100%" showDataTips="true" dataTipFunction="dataTipFunction"
							  left="20" right="40" bottom="20" top="40" dataProvider="{colRopewayHis}" horizontalAxis="{hAxis}">
					<mx:backgroundElements>
						<fx:Array>						
							<mx:GridLines gridDirection="both" 
										  horizontalStroke="{gridStroke}"
										  verticalStroke="{gridStroke}"/>
						</fx:Array>
					</mx:backgroundElements>
										
					<mx:verticalAxis>
						<mx:LinearAxis id="verticalAxis" baseAtZero="false"/>
					</mx:verticalAxis>
										
					<mx:verticalAxisRenderers>					
						<mx:AxisRenderer axis="{verticalAxis}" 
										 axisStroke="{tickStroke}" tickStroke="{tickStroke}" 
										 minorTickPlacement="none"/>
					</mx:verticalAxisRenderers>
					
					<mx:horizontalAxisRenderers>			
						<mx:AxisRenderer axis="{hAxis}" 
										 axisStroke="{tickStroke}" tickStroke="{tickStroke}" 
										 minorTickPlacement="none"/>					
					</mx:horizontalAxisRenderers>
					
					<mx:series>
						<mx:LineSeries yField="averageValue" xField="ropewayTime" 
									   itemRenderer="{new ClassFactory(ItemRendererLineChartForce)}" 
									   lineStroke="{lStroke}" showDataEffect="{wipeShow}"/>
						<mx:LineSeries yField="minValue" xField="ropewayTime" 
									   itemRenderer="{new ClassFactory(ItemRendererLineChartAve)}" 
									   lineStroke="{aStroke}" showDataEffect="{wipeShow}"/>
						<mx:LineSeries yField="maxValue" xField="ropewayTime" 
									   itemRenderer="{new ClassFactory(ItemRendererLineChartAve)}" 
									   lineStroke="{aStroke}" showDataEffect="{wipeShow}"/>
					</mx:series>
				</mx:LineChart>
				
				<s:Label left="10" top="20" text="抱索力（KG）"/>
				<s:Label right="15" bottom="40" text="时间"/>
				<s:Label y="10" fontSize="24" fontWeight="bold" horizontalCenter="0" color="0x1b5aa2"
						 text="{listRopewayId.selectedItem.ropewayCarId}平均抱索力统计"/>
			</s:SkinnableContainer>
		</s:NavigatorContent>
		<s:NavigatorContent>
			<s:DataGrid width="100%" height="100%" dataProvider="{colRopewayHis}"
						borderColor="#63c3d6" skinClass="custom.skin.SkinGrid" 
						alternatingRowColors="[#FFFFFF,#CFEDF7]">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn headerText="吊箱编号" dataField="ropewayCarId" width="100"/>
						<s:GridColumn headerText="报索器编号" dataField="ropewayId" width="100"/>
						<s:GridColumn headerText="时间" dataField="ropewayTime" width="100" formatter="{dateF}"/>			
						<s:GridColumn headerText="平均报索力" dataField="averageValue" width="100"/>		
						<s:GridColumn headerText="最小报索力" dataField="minValue" width="100"/>		
						<s:GridColumn headerText="最大报索力" dataField="maxValue" width="100"/>	
						<s:GridColumn headerText="所属索道站" dataField="fromRopeStation"/>
					</s:ArrayList>				
				</s:columns>
			</s:DataGrid>
		</s:NavigatorContent>
	</mx:ViewStack>
</s:NavigatorContent>
