<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" height="100%" width="100%">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import app.model.vo.EngineTempVO;
			
			private var _fstEngineTemp:EngineTempVO;
			[Bindable]
			public function get fstEngineTemp():EngineTempVO
			{
				return _fstEngineTemp;
			}
			public function set fstEngineTemp(value:EngineTempVO):void
			{
				_fstEngineTemp = value;
				
				watch1.graphics.clear();
				
				if(!value)
					return;
				
				var command:Vector.<int> = new Vector.<int>;
				command.push(1,2,2,2);
				
				var path:Vector.<Number> = new Vector.<Number>;
				path.push(150,5,145,155,155,155,150,5);
				
				watch1.graphics.lineStyle(1);
				watch1.graphics.drawPath(command,rotatePath(value.temp,path));
			}
						
			public var _sndEngineTemp:EngineTempVO;
			[Bindable]
			public function get sndEngineTemp():EngineTempVO
			{
				return _sndEngineTemp;
			}
			public function set sndEngineTemp(value:EngineTempVO):void
			{
				_sndEngineTemp = value;
				
				watch2.graphics.clear();
				
				if(!value)
					return;
				
				var command:Vector.<int> = new Vector.<int>;
				command.push(1,2,2,2);
				
				var path:Vector.<Number> = new Vector.<Number>;
				path.push(150,5,145,155,155,155,150,5);
				
				watch2.graphics.lineStyle(1);
				watch2.graphics.drawPath(command,rotatePath(value.temp,path));
			}
			
			private function rotatePath(temp:Number,path:Vector.<Number>):Vector.<Number>
			{
				var ag:Number = (270 / 2 - (temp - 0) / (100 - 0) * 270)/180 * Math.PI;
				
				var center:Point = new Point(150,150);				
				var pt:Point = new Point;
				var rPt:Point = new Point;
				var rPath:Vector.<Number> = new Vector.<Number>;
				for(var i:int=0;i<path.length;i++)
				{
					if(i % 2 == 0)
					{
						pt.x = path[i];
					}
					else
					{
						pt.y = path[i];
						
						pt.x -= center.x;
						pt.y = center.y - pt.y;
						
						rPt.x = pt.x * Math.cos(ag) - pt.y * Math.sin(ag);
						rPt.y = pt.x * Math.sin(ag) + pt.y * Math.cos(ag);
						
						pt.x = rPt.x + center.x;
						pt.y = center.y - rPt.y;
						
						rPath.push(pt.x,pt.y);
					}
				}
				
				return rPath;
			}
			
			[Bindable]public var fstHistory:ArrayCollection;
			[Bindable]public var sndHistory:ArrayCollection;
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:HGroup width="100%">
		<s:Group id="watch1">
			<s:Ellipse width="300" height="300">
				<s:stroke>
					<s:SolidColorStroke color="0x0"/>
				</s:stroke>
			</s:Ellipse>
		</s:Group>
		<mx:LineChart height="300" width="100%" dataProvider="{fstHistory}">
			<mx:verticalAxis>
				<mx:LinearAxis/>
			</mx:verticalAxis>
			<mx:horizontalAxis>
				<mx:DateTimeAxis displayLocalTime="true" 
								 alignLabelsToUnits="true"/>
			</mx:horizontalAxis>
			
			<mx:series>
				<mx:LineSeries yField="temp" xField="date"/>
			</mx:series>
		</mx:LineChart>
	</s:HGroup>
	
	<s:HGroup width="100%">
		<s:Group id="watch2">
			<s:Ellipse width="300" height="300">
				<s:stroke>
					<s:SolidColorStroke color="0x0"/>
				</s:stroke>
			</s:Ellipse>
		</s:Group>
		<mx:LineChart height="300" width="100%" dataProvider="{sndHistory}">
			<mx:verticalAxis>
				<mx:LinearAxis/>
			</mx:verticalAxis>
			<mx:horizontalAxis>
				<mx:DateTimeAxis displayLocalTime="true" 
								 alignLabelsToUnits="true"/>
			</mx:horizontalAxis>
			
			<mx:series>
				<mx:LineSeries yField="temp" xField="date"/>
			</mx:series>
		</mx:LineChart>
	</s:HGroup>
</s:Group>
