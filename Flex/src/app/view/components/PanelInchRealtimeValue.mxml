<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 skinClass="custom.skin.SkinPanel" height="100%" width="100%" fontWeight="bold">
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.events.ResizeEvent;
			
			import app.model.vo.InchVO;
									
			private var _watcher:ChangeWatcher;
			
			[Bindable]private var _niddleX:Number;
			
			private var _inch:InchVO;
			
			[Bindable]
			public function get inch():InchVO
			{
				return _inch;
			}
			public function set inch(value:InchVO):void
			{
				_inch = value;
				
				if(_watcher)
					_watcher.unwatch();
				
				BindingUtils.bindSetter(setterNiddle,_inch,"lastValue");
			}
			
			private function setterNiddle(obj:Object):void
			{				
				_niddleX = getNiddlePos(inch.lastValue.value);
			}
											
			private function getNiddlePos(value:Number):Number
			{				
				const MAX_VALUE:Number = 10;
				const MIN_VALUE:Number = 0;
				const IMG_WIDTH:Number = 892;
				const IMG_MAX:Number = 840;
				const IMG_MIN:Number = 18;
				
				var v:Number = value;
				if(v > MAX_VALUE)v = MAX_VALUE;
				if(v < MIN_VALUE)v = MIN_VALUE;
				
				var grad:Number = (v - MIN_VALUE) / (MAX_VALUE - MIN_VALUE) * (IMG_MAX - IMG_MIN) + IMG_MIN;				
				grad *= img.width / IMG_WIDTH;
				grad -= niddle.width / 2;
				
				return grad + img.x;
			}	
			
			private var _resizeExecuting:Boolean = false;
			
			protected function img_resizeHandler(event:ResizeEvent):void
			{				
				_resizeExecuting = true;
				
				flash.utils.setTimeout(onResize,200);
			}
			
			private function onResize():void
			{
				if(_resizeExecuting)
				{
					_niddleX = getNiddlePos(inch.lastValue.value);
				}
				
				_resizeExecuting = false;
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:Move id="m"/>
		<s:DateTimeFormatter id="df" dateTimePattern="HH:mm:ss"/>
	</fx:Declarations>
	
	<s:HGroup left="30" right="20" height="24" verticalAlign="middle" color="0x1b5aa2">
		<s:Label text="张紧小尺 - {df.format(inch.lastValue.date)}"/>		
	</s:HGroup>
			
	<s:VGroup id="niddle" y="35" horizontalAlign="center" gap="0" width="40" moveEffect="{m}" x="{_niddleX}">
		<s:Label text="{inch.lastValue.value}M" fontSize="38" color="0x1b5aa2"/>
		<s:Image source="assets/image/inch_niddle.png"/>		
	</s:VGroup>
	
	<s:Image id="img" left="20" right="20" y="100" height="45" source="assets/image/inch_back_01.png" 
			 scaleMode="stretch" resize="img_resizeHandler(event)"/>
	
	<s:SkinnableContainer skinClass="custom.skin.SkinPanelContent" fontSize="24"
						  left="20" right="20" top="160" bottom="10">	
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle" gap="20"/>
		</s:layout>
		
		<s:Spacer width="100%"/>
		
		<s:VGroup gap="10">
			<s:Label text="今天平均"/>
			<s:Label text="同期平均"/>			
		</s:VGroup>
				
		<s:VGroup gap="10" color="0x1b5aa2">
			<s:Label text="{inch.aveDay} M"/>
			<s:Label text="{inch.periodAveDay} M"/>			
		</s:VGroup>
		
		<s:Spacer width="100%"/>
				
		<s:VGroup gap="10">
			<s:Label text="本月平均"/>
			<s:Label text="同期月平均"/>			
		</s:VGroup>
		
		<s:VGroup gap="10" color="0x1b5aa2">
			<s:Label text="{inch.aveMon} M"/>
			<s:Label text="{inch.periodAveMon} M"/>			
		</s:VGroup>
		
		<s:Spacer width="100%"/>
		
		<s:VGroup>
			<s:Label text="三个月平均"/>
			<s:Label text="同期三月平均"/>			
		</s:VGroup>
		
		<s:VGroup color="0x1b5aa2">
			<s:Label text="{inch.aveThreeMon} M"/>
			<s:Label text="{inch.periodThreeMon} M"/>			
		</s:VGroup>
		
		<s:Spacer width="100%"/>
	</s:SkinnableContainer>
</s:SkinnableContainer>
