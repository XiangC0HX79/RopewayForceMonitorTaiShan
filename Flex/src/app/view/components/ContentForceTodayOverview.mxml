<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		width="100%" height="100%">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:SolidColorStroke id="tickStroke" color="0xC2C2C2" weight="2"/>
		<s:SolidColorStroke id="gridStroke" color="gray" alpha="0.3" weight="1"/>
		<s:SolidColorStroke id="lStroke" color="0xE48701" weight="1"/>
		
		<mx:WipeRight id="wipeShow" duration="1000"/>
		
		<s:RadioButtonGroup id="rbgStation" change="dispatchEvent(new Event(STATION_CHANGE))" selectedValue="@{selStation}"/>
	</fx:Declarations>	
	
	<fx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import spark.events.RendererExistenceEvent;
			
			import app.model.dict.RopewayStationDict;
			import app.model.vo.RopewayStationForceVO;
			
			import custom.itemRenderer.ItemRendererGroup;
			import custom.itemRenderer.ItemRendererLineChartForce;
			import custom.itemRenderer.ItemRendererTodayOverview;
			
			public static const STATION_CHANGE:String = "StaionChange";
			
			public static const ITEM_CLICK:String = "ItemClick";
			
			public static const CONTAINER_RESIZE:String = "ContainerResize";
						
			[Bindable]public var selStation:*;
			
			[Bindable]public var colStations:ArrayCollection;
			
			[Bindable]public var carCount:Number = 0;
			
			[Bindable]public var pageIndex:Number = 0;
			
			[Bindable]public var pageSize:Number = 0;
			
			[Bindable]public var arrDp:Array;
			
			[Bindable]public var colDp:ArrayCollection = new ArrayCollection;
			
			[Bindable]public var ropeway:RopewayStationForceVO; 
			
			protected function datagroup_rendererAddHandler(event:RendererExistenceEvent):void
			{
				event.renderer.addEventListener(MouseEvent.CLICK,onRendererClick);
			}
			
			private function onRendererClick(event:Event):void
			{
				var renderer:ItemRendererTodayOverview = event.currentTarget as ItemRendererTodayOverview;
				ropeway = renderer.data as RopewayStationForceVO;
				
				dispatchEvent(new Event(ITEM_CLICK));
			}
						
			protected function buttonUp_buttonDownHandler(event:MouseEvent):void
			{
				if(pageIndex <= 0)
					return;
				
				pageIndex--;
				
				var a:Number = pageIndex * pageSize;
				var b:Number = Math.min((pageIndex + 1) * pageSize,arrDp.length);
				colDp.source = arrDp.slice(a,b);
				
			}
			
			protected function buttonDown_buttonDownHandler(event:MouseEvent):void
			{
				if((pageIndex + 1) * pageSize >= arrDp.length)
					return;
				
				pageIndex++;
				
				var a:Number = pageIndex * pageSize;
				var b:Number = Math.min((pageIndex + 1) * pageSize,arrDp.length);
				colDp.source = arrDp.slice(a,b);
			}			
			
			protected function datagroupCol_rendererAddHandler(event:RendererExistenceEvent):void
			{
				var renderer:ItemRendererGroup = event.renderer as ItemRendererGroup;
				renderer.rb.group = rbgStation;
			}		
		]]>
	</fx:Script>	
	<s:HGroup verticalAlign="middle" height="31" paddingLeft="15" gap="30" color="white" left="0" right="0">		
		<s:Label text="实时监测"/>
		
		<s:Spacer width="100%"/>
		
		<s:SkinnableDataContainer dataProvider="{colStations}" height="100%"
								  rendererAdd="datagroupCol_rendererAddHandler(event)"
								  itemRenderer="custom.itemRenderer.ItemRendererGroup">
			<s:layout>
				<s:HorizontalLayout gap="20" verticalAlign="middle"/>
			</s:layout>
		</s:SkinnableDataContainer>
		
		<s:Spacer width="20"/>
		
		<s:Group height="100%">
			<s:Rect top="5" bottom="5" left="0" right="0" radiusX="5" radiusY="5">
				<s:fill>
					<s:SolidColor color="white"/>
				</s:fill>
			</s:Rect> 
			<s:Label color="black" fontWeight="bold" height="100%" text="吊箱总数：{carCount}" verticalAlign="middle"
					 paddingTop="3" paddingLeft="5" paddingRight="5"/>
		</s:Group>
	</s:HGroup>
	
	<s:DataGroup id="dataGroup" top="31" left="0" right="30" height="335" dataProvider="{colDp}" 
				 clipAndEnableScrolling="true"
				 rendererAdd="datagroup_rendererAddHandler(event)"
				 itemRenderer="custom.itemRenderer.ItemRendererTodayOverview">
		<s:layout>
			<s:TileLayout columnAlign="justifyUsingWidth"/>
		</s:layout>		
	</s:DataGroup>
		
	<s:VGroup right="0" top="31" height="335" width="30" verticalAlign="middle">
		<s:Image buttonMode="true" source="assets/image/btn_up.png" click="buttonUp_buttonDownHandler(event)"/>
		<s:Image buttonMode="true" source="assets/image/btn_down.png" click="buttonDown_buttonDownHandler(event)"/>
	</s:VGroup>
	
	<s:SkinnableContainer left="0" right="0" top="366" bottom="0" fontSize="12">		
		<s:Rect id="border" left="0" right="0" top="0" bottom="0">
			<s:stroke>
				<s:SolidColorStroke weight="1" color="#63c3d6"/>
			</s:stroke>
		</s:Rect>	
				
		<s:Group id="groupChart" left="59" right="55" bottom="47" top="50">				
			<s:Rect id="lineMax" height="1" left="10" right="10" visible="false">
				<s:fill>
					<s:BitmapFill source="@Embed('assets/image/yes_stroke.png')" fillMode="repeat"/>
				</s:fill>
			</s:Rect>
			<s:Rect id="lineAve" height="1" left="10" right="10" visible="false">
				<s:fill>
					<s:BitmapFill source="@Embed('assets/image/yes_stroke.png')" fillMode="repeat"/>
				</s:fill>
			</s:Rect>
			<s:Rect id="lineMin" height="1" left="10" right="10" visible="false">
				<s:fill>
					<s:BitmapFill source="@Embed('assets/image/yes_stroke.png')" fillMode="repeat"/>
				</s:fill>
			</s:Rect>		
		</s:Group>
		
		<mx:LineChart id="lineChart" showDataTips="true" dataTipRenderer="app.view.components.ChartTip"
					  left="20" right="40" bottom="20" top="40" dataProvider="{ropeway.ropewayHistory}">
			<mx:seriesFilters>
				<fx:Array/>
			</mx:seriesFilters>
			<mx:backgroundElements>
				<fx:Array>						
					<mx:GridLines gridDirection="both" 
								  horizontalStroke="{gridStroke}"
								  verticalStroke="{gridStroke}"/>
				</fx:Array>
			</mx:backgroundElements>
			
			<mx:annotationElements>
				<mx:CartesianDataCanvas id="dataCanvas"/>
			</mx:annotationElements>
			
			<mx:verticalAxis>
				<mx:LinearAxis id="verticalAxis"/>
			</mx:verticalAxis>
			<mx:horizontalAxis>
				<mx:DateTimeAxis displayLocalTime="true" 
								 alignLabelsToUnits="true"
								 id="horizontalAxis"/>
			</mx:horizontalAxis>
			
			<mx:verticalAxisRenderers>					
				<mx:AxisRenderer axis="{verticalAxis}" 
								 axisStroke="{tickStroke}" tickStroke="{tickStroke}" 
								 minorTickPlacement="none"/>
			</mx:verticalAxisRenderers>
			
			<mx:horizontalAxisRenderers>			
				<mx:AxisRenderer axis="{horizontalAxis}" 
								 axisStroke="{tickStroke}" tickStroke="{tickStroke}" 
								 minorTickPlacement="none"/>					
			</mx:horizontalAxisRenderers>
			
			<mx:series>
				<mx:LineSeries yField="ropewayForce" xField="ropewayTime" lineStroke="{lStroke}"
							   itemRenderer="{new ClassFactory(ItemRendererLineChartForce)}" 
							   showDataEffect="{wipeShow}">
				</mx:LineSeries>
			</mx:series>
		</mx:LineChart>		
				
		<s:Label right="45" y="{lineMax.y + 35}" id="lbMax" text="{ropeway.yesterdayMax} {ropeway.valueUnit}" textAlign="center"
				 verticalAlign="middle"/> 	
		<s:Label right="45" y="{lineMin.y + 35}" id="lbMin" text="{ropeway.yesterdayMin} {ropeway.valueUnit}" textAlign="center"
				 verticalAlign="middle"/> 	
		<s:Label right="45" y="{lineAve.y + 35}" id="lbAve" text="{ropeway.yesterdayAve.toFixed()} {ropeway.valueUnit}" textAlign="center"
				 verticalAlign="middle"/> 
		
		<s:Label left="10" top="20" text="抱索力（{ropeway.valueUnit}）"/>
		<s:Label right="15" bottom="40" text="时间"/>
		<s:Label y="10" fontSize="24" fontWeight="bold" horizontalCenter="0" color="0x1b5aa2"
				 text="{ropeway.ropewayCarId}抱索力今日监测曲线"/>
	</s:SkinnableContainer>
</s:Group>
