<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" minWidth="350" height="140">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:Fade id="fade" alphaFrom="0.2" alphaTo="1" 
				effectStart="dispatchEvent(new Event(ALARM_START))"
				effectEnd="dispatchEvent(new Event(ALARM_END))"
				duration="500" repeatCount="26" target="{elli}" repeatBehavior="reverse"/>
		<s:DateTimeFormatter id="dateTimeF" dateTimePattern="HH:mm:ss"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import app.model.vo.AreaWheelVO;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			import mx.events.EffectEvent;
			
			import spark.events.RendererExistenceEvent;
			import spark.formatters.DateTimeFormatter;
			import spark.skins.spark.DefaultItemRenderer;
			
			public static const VOICE_CHANGE:String = "VoiceChange";
			
			public static const ALARM_DEAL:String = "AlarmDeal";
			
			public static const ALARM_START:String = "AlarmStart";
			
			public static const ALARM_END:String = "AlarmEnd";
			
			[Bindable]public var colAlarm:ArrayCollection;	
			
			[Bindable]public var voice:Boolean = true;
			
			
			private function listLabelFunction(item:Object):String
			{
				var id:int = int((item.areaid - 1) / 2);
				var ids:String;
				if(id == 0)
					ids = "驱动站支架";
				
				if(FlexGlobals.topLevelApplication.Station == "中天门")
				{				
					if(id == 13)
						ids = "回转站支架";
					else
						ids = id.toString() + "#支架";
					
					var up:String = (item.areaid % 2) == 0?"上行":"下行";
				}
				else
				{
					if(id == 12)
						ids = "回转站支架";
					else
						ids = id.toString() + "#支架";
					
					up = (item.areaid % 2) == 0?"下行":"上行";
				}
								
				 /* return dateTimeF.format(item.alarmDate) + " "
					+ item.fromRopeStation + " "
					+ item.carId + " " + item.alarmDesc;  */
				 return  ids + up + item.wheelid + "号滚轮需要维护！"
			}
			
			protected function listAlarm_rendererAddHandler(event:RendererExistenceEvent):void
			{
				var renderer:DefaultItemRenderer = event.renderer as DefaultItemRenderer;
				renderer.doubleClickEnabled = true;
				renderer.addEventListener(MouseEvent.DOUBLE_CLICK,onItemClick);
			}
			
			private function onItemClick(event:MouseEvent):void
			{
				dispatchEvent(new Event(ALARM_DEAL));
			}			
		]]>
	</fx:Script>
	
	<!--<s:HGroup left="30" right="20" height="24" verticalAlign="middle" color="0x1b5aa2">
		<s:Label text="报警情况" fontWeight="bold"/>
	</s:HGroup>-->
	
	<s:Group x="20" y="0" width="75" height="100">
		<s:Image id="imgAlarm" width="75" height="100" source="assets/image/panel_alarm.png"/>
		<s:Ellipse left="-20" right="-20" top="-20" bottom="10" id="elli" alpha="0.1">
			<s:fill>
				<s:RadialGradient>
					<s:entries>
						<s:GradientEntry color="0xC5C551" ratio="0.00" alpha="1.0"/> 
						<s:GradientEntry color="0xFEFE24" ratio="0.50" alpha="0.5"/>
						<s:GradientEntry color="0xECEC21" ratio="1.00" alpha="0"/>
					</s:entries>
				</s:RadialGradient>
			</s:fill>
		</s:Ellipse>
	</s:Group>
	
	<s:List id="listAlarm" left="100" right="20" top="0" bottom="30"
			skinClass="custom.skin.SkinListAlarm"
			rendererAdd="listAlarm_rendererAddHandler(event)"
			dataProvider="{colAlarm}" labelFunction="listLabelFunction"
			fontSize="14" color="red"/>
</s:Group>
